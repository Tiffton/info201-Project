a <- 1 + 2/0
## Create a variable `hometown` that stores the city in which you were born
hometown <- "Seattle"
hometown
## Assign your name to the variable `name`
name <- "Tiffany Ton"
name
## Assign your height to a variable `height`
height <- "5'2\""
height
cat("my height is" , height, "\n")
## Create a variable `puppies` equal to the number of puppies you'd like to
## have
puppies <- 2
puppies
## Create a variable `price`, which is how expensive you think a puppy is
price <- 2000
price
## Create a variable `total` that has the total cost of all of your
## puppies
total <- puppies*price
total
max_puppies <- 1000 %/% price
max_puppies
too.expensive <- 1000 < total
too.expensive
## Now let's do weather forecast:
## assign 'true' or 'false' to a variable named 'I_saw_raindrops'
I_saw_raindrops <- FALSE
I_saw_raindrops
## assign 'true' or 'false' to a variable named 'my_shoes_are_wet'
my_shoes_are_wet <- FALSE
my_shoes_are_wet
## assign 'true' or 'false' to a variable named 'my_ta_is_soaked'
my_ta_is_soaked <- FALSE
my_ta_is_soaked
## compute chance of rain in Seattle today: add all these three variables and
## divide by 3.  Print the result with an informative message (use `cat()`).
chance_of_rain_in_seattle_today <- (I_saw_raindrops + my_shoes_are_wet + my_ta_is_soaked)/3
cat("chance of rain in Seattle today is", chance_of_rain_in_seattle_today, "\n")
## Write a function `addThree` that adds 3 to an input value
addThree <- + 3
4 + addThree
## Create a variable `ten` by passing 7 to your `addThree` function
ten <- 7 + addThree
## Write a function `feetToMeters` that converts from feet to meters
##
## Note: if you come with metric background, you may want to do the
## following three questions
## in the opposite way: create function 'metersToFeet' and compute
## your height in feet below
feetToMeters <- function(ft , inches) {
m <- ft * 0.3048 + inches * 0.0254
m
}
feetToMeters(5, 2)
## Create a variable `hometown` that stores the city in which you were born
hometown <- "Seattle"
hometown
## Assign your name to the variable `name`
name <- "Tiffany Ton"
name
## Assign your height to a variable `height`
height <- "5'2\""
height
cat("my height is" , height, "\n")
## Create a variable `puppies` equal to the number of puppies you'd like to
## have
puppies <- 2
puppies
## Create a variable `price`, which is how expensive you think a puppy is
price <- 2000
price
## Create a variable `total` that has the total cost of all of your
## puppies
total <- puppies*price
total
max_puppies <- 1000 %/% price
max_puppies
too.expensive <- 1000 < total
too.expensive
## Now let's do weather forecast:
## assign 'true' or 'false' to a variable named 'I_saw_raindrops'
I_saw_raindrops <- FALSE
I_saw_raindrops
## assign 'true' or 'false' to a variable named 'my_shoes_are_wet'
my_shoes_are_wet <- FALSE
my_shoes_are_wet
## assign 'true' or 'false' to a variable named 'my_ta_is_soaked'
my_ta_is_soaked <- FALSE
my_ta_is_soaked
## compute chance of rain in Seattle today: add all these three variables and
## divide by 3.  Print the result with an informative message (use `cat()`).
chance_of_rain_in_seattle_today <- (I_saw_raindrops + my_shoes_are_wet + my_ta_is_soaked)/3
cat("chance of rain in Seattle today is", chance_of_rain_in_seattle_today, "\n")
## Write a function `addThree` that adds 3 to an input value
addThree <- + 3
4 + addThree
## Create a variable `ten` by passing 7 to your `addThree` function
ten <- 7 + addThree
## Write a function `feetToMeters` that converts from feet to meters
##
## Note: if you come with metric background, you may want to do the
## following three questions
## in the opposite way: create function 'metersToFeet' and compute
## your height in feet below
feetToMeters <- function(ft , inches) {
m <- ft * 0.3048 + inches * 0.0254
m
}
feetToMeters(5, 2)
#replacing elements
v <- c(1, 2, 3, 4. 5)
#replacing elements
v <- c(1, 2, 3, 4. 5)
#replacing elements
v <- c(1, 2, 3, 4, 5)
v[3] <- -3
v
v[v<3] <- 0
v
v[3] <- -3
x <- rnorm(10)
x
x[x<0] <- 0
x
#absolute value
z <- -5:5
z
z[z<0] <- -z[z<0]
z
#absolute value
z <- -5:5
z
z <- 5:(-5)
iNeg <- z<0
z[iNeg] <- -z[iNeg]
z
#how to replace all odd numebrs with 1
n <- 1:21
n
iOdd <- n %% 2 ==1
iOdd
n[iOdd] <- 1
n
iOdd <- n %% 2 == 0
iOdd
l <- list(123, "c", c(TRUE, FALSE))
l
l <- list(123, "C", c(TRUE, FALSE))
l
emperor <- list(name="Qin Shi Huang",
capital="Xianyang",
warrior=TRUE)
emperor
emperor[[1]]
emperor[[name]]
emperor[["name"]]
emperor[["capital"]]
emperor[["name"]]
emperor[[warrior]]
emperor$capital
var <- "warrior"
emperor[[var]]
emperor$var
emperor$height <- "4'\11\""
emperor
emperor$height <- "4'11\""
emperor
emperor[["cell"]] <- 2061234567
emperor
emperor[["capital"]]
emperor[["name"]]
emperor$var
emperor$height <- "4'11\""
emperor[["cell"]] <- 2061234567
emperor
name(emperor)
names(emperor)
for(element in names(emperor)) {
cat(element, ";", max(emperor[[el]]))
}
for(element in names(emperor)) {
cat(element, ";", max(emperor[[element]]))
}
for(element in names(emperor)) {
cat(element, ";", max(emperor[[element]], "\n"))
}
for(element in names(emperor)) {
cat(element, ";", max(emperor[[element]]), "\n")
}
name <- c("Ada", "Bob", "Chris", "Diya", "Emma")
height <- c(58, 59, 60, 61, 62)
weight <- c(120, 122, 124, 126,128)
patients <- data.frame(name, height, weight)
patients
name
rm(name)
ls()
patients
name <- c("Ada", "Bob", "Chris", "Diya", "Emma")
nrow(patients)
ncol(patients)
dim(patients)
names(patients)
head(patients, 2)
#last two lines of list
tail(patients, 2)
#last two lines of list
tail(patients, 1)
#select variables and selecting rows
#ex:interested in patient's name
patients$name
#or
var <- "height"
var
patient[[var]]
#or
var <- "height"
patient[[var]]
patients[[var]]
patients[c("name", "height")]
i <- patients$height>60
patients[9,]
patients[9]
patients[9,]
patients[i,]
patients[i,c("name", "weight")]
patients
patients[i,]
patients[i,c("name", "weight")]
patients$test <- c("P", "N", "P", "P", "N")
patients
pos <- patients$test("P")
pos <- patients$test == "P"
pos
patients(pos)
patients[pos]
pos
patients[pos, TRUE]
#or
patients[pos,]
#or
patients[patients$test == "p",]
#or
patients[patients$test == "p",]
#or
patients[patients$test == "P",]
#commpute summaries
patients[["tall"]] <- patients$height>60
patients
for(element in names(emperor)) {
cat(element, ";", max(emperor[[element]]), "\n")
}
##average height
mean(patient$height)
##average height
mean(patients$height)
#ave.weight
i <- patietns$test == "P"
#ave.weight
i <- patients$test == "P"
patietns$weight[i]
patients$weight[i]
mean(patients$weight)
#or
i <- patients$test == "P"
weights <- patients$weight
sickweight <- weight[i]
mean(sickweight)
mean(patients$weight[patients$test == "P"])
patients$superman <- height+weight
patients$superman <- patients$height + patients$weight >180
patients$superman
patients
setwd("/Users/tiffanyton/Documents/info201/Project/info201-Project")
